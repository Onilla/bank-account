spring.application.name=user-service

# jpa hibernate
spring.datasource.url=jdbc:postgresql://localhost:5432/user-service
spring.datasource.username=postgres
spring.datasource.password=asdf4567hjkl
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
server.error.include-stacktrace=never
# datasource-initialization=true означает, что нам нужно подождать пока при запуске создадутся таблицы
spring.jpa.defer-datasource-initialization=true
#create удалять и заново создавать таблицы на основе entity при каждом запуске
spring.jpa.hibernate.ddl-auto=none
spring.jpa.generate-ddl=true
# always - при запуске всегда надо искать data  schema sql файлов
spring.sql.init.mode=always

#kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=user
kafka.producer.id=producerGroup
NEW_CARD_TOPIC=deposit-to-master-card-order
LISTENER_ID_NEW_CARD=listenerIdNewCard
# ?? ????? ?????? ???????? ? ??????
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# spring.servlet.multipart.max-file-size=10MB
# spring.servlet.multipart.max-request-size=10MB
